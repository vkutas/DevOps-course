---
- name: Install requried packages
  ansible.builtin.apt: 
    pkg: "{{ packages }}"
    state: present
    update_cache: yes

- name: Create service-owner user
  ansible.builtin.user:
    name: "{{ service_user_name }}"
    password: "{{ service_user_password }}"
    create_home: yes
    home: "{{ service_user_home }}"
    shell: /bin/bash
    state: present

- name: Create virual environment and install requred python packages
  ansible.builtin.pip:
    name: "{{ python_libs }}"
    virtualenv: "{{ service_user_home }}/service-venv"
    virtualenv_command: 'python3.7 -m venv'
    state: present

- name: Copy emoji-service files
  ansible.builtin.copy:
    src: emoji-service/
    dest: "{{ service_user_home }}"
    owner: "{{ service_user_name }}"
    group: "{{ service_user_name }}"    

- name: Copy systemd unit of service
  ansible.builtin.template:
    src: emoji-service.service.j2
    dest: /etc/systemd/system/emoji-service.service
    owner: root
    group: root

- name: Start and enable emoji-service
  ansible.builtin.service:
    name: emoji-service
    enabled: yes
    state: restarted
  
- name: Generate Key for self signed sertificate. 
  community.crypto.openssl_privatekey:
    path: /etc/ssl/private/nginx-selfsigned.key

- name: Create CSR using the key from previous step.
  community.crypto.openssl_csr:
    path: /etc/ssl/certs/nginx-selfsigned.csr
    privatekey_path: /etc/ssl/private/nginx-selfsigned.key

- name: Generate  a self signed sertificate using key and csr from previous steps.
  community.crypto.x509_certificate:
    path: /etc/ssl/certs/nginx-selfsigned.crt
    privatekey_path: /etc/ssl/private/nginx-selfsigned.key
    csr_path: /etc/ssl/certs/nginx-selfsigned.csr
    provider: selfsigned
        
- name: Copy nginx server block configuration file
  ansible.builtin.template:
    src: emojiservice.nginx.j2
    dest: /etc/nginx/sites-available/emojiservice
    owner: root
    group: root

- name: Enable the nginx server block configuration
  ansible.builtin.file:
     src: /etc/nginx/sites-available/emojiservice
     dest: /etc/nginx/sites-enabled/emojiservice
     state: link

- name: Disable default nginx site
  ansible.builtin.file:
     path: /etc/nginx/sites-enabled/default
     state: absent

- name: Start and enable nginx
  ansible.builtin.service:
    name: nginx
    enabled: yes
    state: restarted

- name: Append iptables rule to allow incoming ssh connections on port 22
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 22
    ctstate: NEW,ESTABLISHED
    jump: ACCEPT
    comment: Allow incoming ssh connections on port 22.

- name: Append iptables rule to allow incoming http connections on port 80.
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 80
    ctstate: NEW,ESTABLISHED
    jump: ACCEPT
    comment: Allow incoming http connections on port 80.  

- name: Append iptables rule to allow incoming https connections on port 443.
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 443
    ctstate: NEW,ESTABLISHED
    jump: ACCEPT
    comment: Allow new incoming http connections on port 443. 

- name: Append iptables rule to deny all incoming connection
  ansible.builtin.iptables:
    chain: INPUT
    jump: DROP
    comment: Deny all incoming connection.

## SSHD Config
- name: replace sshd_config file
  ansible.builtin.copy:
    src: sshd_config
    dest: /etc/ssh/sshd_config
    owner: root
    group: root 
  
- name: Restart sshd service
  ansible.builtin.service:
    name: sshd
    enabled: yes
    state: restarted